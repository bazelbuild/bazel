load("@rules_java//java:defs.bzl", "java_library")

package(
    default_applicable_licenses = ["//:license"],
    default_visibility = ["//src:__subpackages__"],
)

filegroup(
    name = "srcs",
    srcs = glob(["*"]) + [
        "//src/main/java/com/google/devtools/build/lib/bazel/bzlmod/modcommand:srcs",
    ],
    visibility = ["//src:__subpackages__"],
)

java_library(
    name = "common",
    srcs = [
        "ArchiveRepoSpecBuilder.java",
        "AttributeValues.java",
        "GitRepoSpecBuilder.java",
        "LocalPathRepoSpecs.java",
        "ModuleFile.java",
        "ModuleKey.java",
        "RepoRuleId.java",
        "RepoSpec.java",
        "Version.java",
    ],
    deps = [
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec",
        "//src/main/java/net/starlark/java/eval",
        "//third_party:auto_value",
        "//third_party:gson",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "exception",
    srcs = ["ExternalDepsException.java"],
    deps = [
        "//src/main/java/com/google/devtools/build/lib/skyframe:detailed_exceptions",
        "//src/main/java/com/google/devtools/build/lib/util:detailed_exit_code",
        "//src/main/java/net/starlark/java/eval",
        "//src/main/protobuf:failure_details_java_proto",
        "//third_party:error_prone_annotations",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "vendor",
    srcs = ["VendorManager.java"],
    deps = [
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/cache",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/downloader",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/profiler",
        "//src/main/java/com/google/devtools/build/lib/util:os",
        "//src/main/java/com/google/devtools/build/lib/vfs",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//third_party:guava",
    ],
)

java_library(
    name = "module_extension",
    srcs = [
        "ModuleExtension.java",
        "ModuleExtensionId.java",
        "ModuleExtensionUsage.java",
        "Tag.java",
        "TagClass.java",
    ],
    deps = [
        ":common",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/packages",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec",
        "//src/main/java/com/google/devtools/build/lib/starlarkbuildapi/repository",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//src/main/java/net/starlark/java/eval",
        "//src/main/java/net/starlark/java/syntax",
        "//third_party:auto_value",
        "//third_party:error_prone_annotations",
        "//third_party:gson",
        "//third_party:guava",
    ],
)

java_library(
    name = "registry",
    srcs = [
        "IndexRegistry.java",
        "Registry.java",
        "RegistryFactory.java",
        "RegistryFactoryImpl.java",
        "RegistryFileDownloadEvent.java",
    ],
    deps = [
        ":common",
        ":vendor",
        ":yanked_versions_value",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repository_options",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/cache",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/downloader",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/lib/profiler",
        "//src/main/java/com/google/devtools/build/lib/util:os",
        "//src/main/java/com/google/devtools/build/lib/vfs",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//third_party:gson",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "bazel_lockfile_module",
    srcs = ["BazelLockFileModule.java"],
    deps = [
        ":module_extension",
        ":resolution",
        ":resolution_impl",
        ":serialization",
        "//src/main/java/com/google/devtools/build/lib:runtime",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repository_options",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/skyframe:precomputed_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:skyframe_cluster",
        "//src/main/java/com/google/devtools/build/lib/vfs",
        "//src/main/java/com/google/devtools/build/skyframe",
        "//third_party:flogger",
        "//third_party:guava",
    ],
)

java_library(
    name = "resolution",
    srcs = [
        "AbridgedModule.java",
        "BazelDepGraphValue.java",
        "BazelFetchAllValue.java",
        "BazelLockFileValue.java",
        "BazelModuleResolutionValue.java",
        "CompiledModuleFile.java",
        "InterimModule.java",
        "LockFileModuleExtension.java",
        "Module.java",
        "ModuleBase.java",
        "ModuleExtensionEvalFactors.java",
        "ModuleExtensionEvalStarlarkThreadContext.java",
        "ModuleExtensionRepoMappingEntriesValue.java",
        "ModuleFileGlobals.java",
        "ModuleFileValue.java",
        "ModuleOverride.java",
        "ModuleThreadContext.java",
        "MultipleVersionOverride.java",
        "NonRegistryOverride.java",
        "RegistryKey.java",
        "RegistryOverride.java",
        "RepoSpecKey.java",
        "RepoSpecValue.java",
        "SingleExtensionUsagesValue.java",
        "SingleExtensionValue.java",
        "SingleVersionOverride.java",
        "VendorFileValue.java",
        "YankedVersionsValue.java",
    ],
    deps = [
        ":common",
        ":exception",
        ":module_extension",
        ":module_extension_metadata",
        ":registry",
        ":root_module_file_fixup",
        "//src/main/java/com/google/devtools/build/docgen/annot",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repo_definition",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/downloader",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/lib/packages",
        "//src/main/java/com/google/devtools/build/lib/packages/semantics",
        "//src/main/java/com/google/devtools/build/lib/rules:repository/repo_recorded_input",
        "//src/main/java/com/google/devtools/build/lib/skyframe:sky_functions",
        "//src/main/java/com/google/devtools/build/lib/skyframe:starlark_util",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization:visible-for-serialization",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec:serialization-constant",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//src/main/java/net/starlark/java/annot",
        "//src/main/java/net/starlark/java/eval",
        "//src/main/java/net/starlark/java/spelling",
        "//src/main/java/net/starlark/java/syntax",
        "//src/main/protobuf:failure_details_java_proto",
        "//third_party:auto_value",
        "//third_party:error_prone_annotations",
        "//third_party:gson",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "serialization",
    srcs = [
        "AttributeValuesAdapter.java",
        "DelegateTypeAdapterFactory.java",
        "GsonTypeAdapterUtil.java",
    ],
    deps = [
        ":common",
        ":module_extension",
        ":resolution",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/cache",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/downloader",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/rules:repository/repo_recorded_input",
        "//src/main/java/net/starlark/java/eval",
        "//third_party:auto_value",
        "//third_party:gson",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "resolution_impl",
    srcs = [
        "BazelDepGraphFunction.java",
        "BazelFetchAllFunction.java",
        "BazelLockFileFunction.java",
        "BazelModuleResolutionFunction.java",
        "Discovery.java",
        "ModuleExtensionContext.java",
        "ModuleExtensionEvaluationProgress.java",
        "ModuleExtensionRepoMappingEntriesFunction.java",
        "ModuleFileFunction.java",
        "RegistryFunction.java",
        "RepoSpecFunction.java",
        "Selection.java",
        "SingleExtensionFunction.java",
        "SingleExtensionUsagesFunction.java",
        "StarlarkBazelModule.java",
        "TypeCheckedTag.java",
        "VendorFileFunction.java",
        "YankedVersionsFunction.java",
        "YankedVersionsUtil.java",
    ],
    deps = [
        ":common",
        ":exception",
        ":module_extension",
        ":module_extension_metadata",
        ":registry",
        ":resolution",
        ":serialization",
        "//src/main/java/com/google/devtools/build/docgen/annot",
        "//src/main/java/com/google/devtools/build/lib:runtime",
        "//src/main/java/com/google/devtools/build/lib/actions:file_metadata",
        "//src/main/java/com/google/devtools/build/lib/analysis:blaze_directories",
        "//src/main/java/com/google/devtools/build/lib/analysis:blaze_version_info",
        "//src/main/java/com/google/devtools/build/lib/bazel:bazel_version",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:attribute_utils",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repo_definition",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repo_definition_value",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repository_options",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/decompressor",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/downloader",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/starlark",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/lib/packages",
        "//src/main/java/com/google/devtools/build/lib/packages/semantics",
        "//src/main/java/com/google/devtools/build/lib/profiler",
        "//src/main/java/com/google/devtools/build/lib/rules:repository/repository_directory_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:client_environment_function",
        "//src/main/java/com/google/devtools/build/lib/skyframe:client_environment_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:package_lookup_function",
        "//src/main/java/com/google/devtools/build/lib/skyframe:package_lookup_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:precomputed_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:starlark_util",
        "//src/main/java/com/google/devtools/build/lib/util:string_encoding",
        "//src/main/java/com/google/devtools/build/lib/vfs",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//src/main/java/com/google/devtools/build/lib/vfs/inmemoryfs",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//src/main/java/net/starlark/java/annot",
        "//src/main/java/net/starlark/java/eval",
        "//src/main/java/net/starlark/java/spelling",
        "//src/main/java/net/starlark/java/syntax",
        "//src/main/protobuf:failure_details_java_proto",
        "//third_party:auto_value",
        "//third_party:error_prone_annotations",
        "//third_party:gson",
        "//third_party:guava",
        "//third_party:java-diff-utils",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "extension_eval_impl",
    srcs = [
        "InnateRunnableExtension.java",
        "RegularRunnableExtension.java",
        "RunnableExtension.java",
        "SingleExtensionEvalFunction.java",
    ],
    deps = [
        ":common",
        ":exception",
        ":module_extension",
        ":module_extension_metadata",
        ":resolution",
        ":resolution_impl",
        ":root_module_file_fixup",
        ":serialization",
        "//src/main/java/com/google/devtools/build/lib:runtime",
        "//src/main/java/com/google/devtools/build/lib/analysis:blaze_directories",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repo_definition",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:repository_options",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:utils",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/downloader",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository/starlark",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/lib/packages",
        "//src/main/java/com/google/devtools/build/lib/profiler",
        "//src/main/java/com/google/devtools/build/lib/rules:repository/repo_recorded_input",
        "//src/main/java/com/google/devtools/build/lib/skyframe:bzl_load_failed_exception",
        "//src/main/java/com/google/devtools/build/lib/skyframe:bzl_load_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:precomputed_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:repository_mapping_value",
        "//src/main/java/com/google/devtools/build/lib/skyframe:skyframe_cluster",
        "//src/main/java/com/google/devtools/build/lib/util:os",
        "//src/main/java/com/google/devtools/build/lib/vfs",
        "//src/main/java/com/google/devtools/build/skyframe",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//src/main/java/net/starlark/java/eval",
        "//src/main/java/net/starlark/java/spelling",
        "//src/main/java/net/starlark/java/syntax",
        "//src/main/protobuf:failure_details_java_proto",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "tidy",
    srcs = [
        "BazelModTidyValue.java",
    ],
    deps = [
        ":exception",
        ":root_module_file_fixup",
        "//src/main/java/com/google/devtools/build/lib/skyframe:sky_functions",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec:serialization-constant",
        "//src/main/java/com/google/devtools/build/lib/vfs",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//third_party:guava",
    ],
)

java_library(
    name = "tidy_impl",
    srcs = [
        "BazelModTidyFunction.java",
    ],
    deps = [
        ":common",
        ":exception",
        ":resolution",
        ":root_module_file_fixup",
        ":tidy",
        "//src/main/java/com/google/devtools/build/lib/bazel/repository:utils",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/lib/skyframe:repository_mapping_value",
        "//src/main/java/com/google/devtools/build/lib/vfs",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//src/main/java/net/starlark/java/eval",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "inspection",
    srcs = [
        "BazelModuleInspectorValue.java",
    ],
    deps = [
        ":common",
        ":exception",
        ":module_extension",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/skyframe:sky_functions",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec:serialization-constant",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//third_party:auto_value",
        "//third_party:error_prone_annotations",
        "//third_party:guava",
    ],
)

java_library(
    name = "inspection_impl",
    srcs = [
        "BazelModuleInspectorFunction.java",
    ],
    deps = [
        ":common",
        ":exception",
        ":inspection",
        ":module_extension",
        ":resolution",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "module_extension_metadata",
    srcs = [
        "ModuleExtensionMetadata.java",
    ],
    deps = [
        ":module_extension",
        ":root_module_file_fixup",
        "//src/main/java/com/google/devtools/build/docgen/annot",
        "//src/main/java/com/google/devtools/build/lib/cmdline",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//src/main/java/net/starlark/java/annot",
        "//src/main/java/net/starlark/java/eval",
        "//third_party:auto_value",
        "//third_party:gson",
        "//third_party:guava",
        "//third_party:jsr305",
    ],
)

java_library(
    name = "root_module_file_fixup",
    srcs = [
        "RootModuleFileFixup.java",
    ],
    deps = [
        ":module_extension",
        "//src/main/java/com/google/devtools/build/lib/events",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec",
        "//src/main/java/com/google/devtools/build/lib/vfs:pathfragment",
        "//third_party:guava",
    ],
)

java_library(
    name = "yanked_versions_value",
    srcs = ["YankedVersionsValue.java"],
    deps = [
        ":common",
        "//src/main/java/com/google/devtools/build/lib/skyframe:sky_functions",
        "//src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec",
        "//src/main/java/com/google/devtools/build/skyframe:skyframe-objects",
        "//third_party:guava",
    ],
)
